<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonPalette2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>