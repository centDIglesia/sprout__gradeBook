<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonPalette2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>