<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>