<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>